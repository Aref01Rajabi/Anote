<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="PrismApp1.Views.MainPage"
             x:Name="MainPageRoot"
             xmlns:converters="clr-namespace:PrismApp1.Converters"
             xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
             xmlns:local="clr-namespace:PrismApp1.Converters"
             Title="یادداشت‌ها">

  <ContentPage.Resources>
    <ResourceDictionary>
      <local:SelectionColorConverter x:Key="BoolToColorConverter"/>
    </ResourceDictionary>
  </ContentPage.Resources>

  <Grid Padding="5">
    <Grid.RowDefinitions>
      <RowDefinition Height="*"/>
      <RowDefinition Height="Auto"/>
      <RowDefinition Height="13*"/>
    </Grid.RowDefinitions>
    
    <!-- menubar -->
    <Grid Grid.Row="0">

      
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="*"/>
      </Grid.ColumnDefinitions>

      <HorizontalStackLayout Grid.Column="0" HorizontalOptions="End" Margin="0,5,0,5" Spacing="5">
        <ImageButton Source="menu.xaml.png"
           BackgroundColor="Transparent"
           BorderColor="Transparent"/>
      </HorizontalStackLayout>


      <HorizontalStackLayout Grid.Column="1" HorizontalOptions="End" Margin="0,5,0,5" Spacing="5" >
        <ImageButton Source="back.xaml.png"
                     Command="{Binding GoBackFolderCommand}"
                     IsVisible="{Binding IsInSubFolder}"
                     BackgroundColor="Transparent"
                     BorderColor="Transparent"/>

        <ImageButton Source="close.xaml.png"
             IsVisible="{Binding SelectionMode}"
             Command="{Binding UndoSelectionModeCommand}"
             BackgroundColor="Transparent"
             BorderColor="Transparent"/>

        <ImageButton Source="delete_key.xaml.png"
             IsVisible="{Binding SelectionMode}"
             Command="{Binding DeleteSelectedCommand}"
             BackgroundColor="Transparent"
             BorderColor="Transparent"/>
        
        <ImageButton Source="search.xaml.png"
               BackgroundColor="Transparent"
               BorderColor="Transparent"/>

        <ImageButton Source="add.xaml.png"
               BackgroundColor="Transparent"
               BorderColor="Transparent"
               Command="{Binding AddNoteCommand}">
          <ImageButton.Triggers>
            <DataTrigger TargetType="ImageButton"
           Binding="{Binding SelectionMode}"
           Value="False">
              <Setter Property="IsVisible" Value="True"/>
            </DataTrigger>
            <DataTrigger TargetType="ImageButton"
           Binding="{Binding SelectionMode}"
           Value="True">
              <Setter Property="IsVisible" Value="False"/>
            </DataTrigger>
          </ImageButton.Triggers>
        </ImageButton>

        <ImageButton Source="addfolder.xaml.png"
               BackgroundColor="Transparent"
               BorderColor="Transparent"
               Command="{Binding AddFolderCommand}">
          <ImageButton.Triggers>
            <DataTrigger TargetType="ImageButton"
           Binding="{Binding SelectionMode}"
           Value="False">
              <Setter Property="IsVisible" Value="True"/>
            </DataTrigger>
            <DataTrigger TargetType="ImageButton"
           Binding="{Binding SelectionMode}"
           Value="True">
              <Setter Property="IsVisible" Value="False"/>
            </DataTrigger>
          </ImageButton.Triggers>
        </ImageButton>

        
      </HorizontalStackLayout>

      
    </Grid>
    
    <!--Folders-->
    <FlexLayout Grid.Row="1" Wrap="Wrap" BindableLayout.ItemsSource="{Binding Folders}" HorizontalOptions="Center">
      <BindableLayout.ItemTemplate>
          <DataTemplate>
          <Frame x:Name="FolderFram" Padding="8" Margin="1" WidthRequest="60" HeightRequest="45" BorderColor="Gray">
            <Frame.Triggers>
              <DataTrigger TargetType="Frame" Binding="{Binding IsSelected}" Value="True">
                <Setter Property="Background" Value="Gray"/>
              </DataTrigger>
              <DataTrigger TargetType="Frame" Binding="{Binding IsSelected}" Value="False">
                <Setter Property="Background" Value="Transparent"/>
              </DataTrigger>
            </Frame.Triggers>
            <Frame.GestureRecognizers>
              <TapGestureRecognizer
                                      Command="{Binding Source={x:Reference MainPageRoot}, Path=BindingContext.ClickFolderCommand}"
                                      CommandParameter="{Binding .}" />
            </Frame.GestureRecognizers>
            <Frame.Behaviors>
              <toolkit:TouchBehavior
                        LongPressCommand="{Binding Source={x:Reference MainPageRoot}, Path=BindingContext.LongPressCommand}"
                        LongPressCommandParameter="{Binding BindingContext, Source={x:Reference FolderFram}}"
                        LongPressDuration="380"/>
            </Frame.Behaviors>
            <Label Text="{Binding Name}" FontSize="10" HorizontalTextAlignment="Center" VerticalTextAlignment="Center"/>
            </Frame>
          </DataTemplate>
        </BindableLayout.ItemTemplate>
      </FlexLayout>



    <!--Notes-->
    <CollectionView Grid.Row="2" ItemsSource="{Binding Notes}">
      <CollectionView.ItemTemplate>
        <DataTemplate>
          <VerticalStackLayout>

              <Frame x:Name="NoteFrame" BackgroundColor="Transparent"
                     CornerRadius="8" Padding="10" Margin="-5">
                <Frame.GestureRecognizers>
                  <TapGestureRecognizer
                                      Command="{Binding Source={x:Reference MainPageRoot}, Path=BindingContext.ClickNoteCommand}"
                                      CommandParameter="{Binding .}" />
                </Frame.GestureRecognizers>
                <Frame.Behaviors>
                  <toolkit:TouchBehavior
                                        LongPressCommand="{Binding Source={x:Reference MainPageRoot}, Path=BindingContext.LongPressCommand}"
                                        LongPressCommandParameter="{Binding BindingContext, Source={x:Reference NoteFrame}}"
                                        LongPressDuration="380"/>
                </Frame.Behaviors>



                <HorizontalStackLayout Spacing="-90">
                  <CheckBox IsVisible="{Binding Source={x:Reference MainPageRoot}, Path=BindingContext.SelectionMode}"
                                IsChecked="{Binding IsSelected, Mode=TwoWay}" >
                    <CheckBox.Triggers>
                      <DataTrigger TargetType="CheckBox" Binding="{Binding IsSelected}" Value="True">
                        <Setter Property="BackgroundColor" Value="#384747"/>
                      </DataTrigger>
                      <DataTrigger TargetType="CheckBox" Binding="{Binding IsSelected}" Value="False">
                        <Setter Property="BackgroundColor" Value="Transparent"/>
                      </DataTrigger>
                    </CheckBox.Triggers>
                  </CheckBox>
                  <Label Text="{Binding Title}" FontSize="13" VerticalTextAlignment="Center"/>
                </HorizontalStackLayout>



              </Frame>
            <BoxView HeightRequest="1.5" BackgroundColor="White" HorizontalOptions="Fill" Margin="0,-1,0,1" Opacity="0.2"/>
          </VerticalStackLayout>
        </DataTemplate>
      </CollectionView.ItemTemplate>
    </CollectionView>


  </Grid>
 

</ContentPage>
